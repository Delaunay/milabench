# -*- coding: utf-8 -*-
"""Orion + Brax Training with PyTorch on GPU

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KlaTeScstmRg7AIWLgrXy9zGmayb5zMS
"""
import os

from giving import give, given

os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "False"

import torch
from brax import envs
from brax.training.agents.ppo.train import train


def run():
    train(
        environment=envs.get_environment(env_name="ant"),
        num_timesteps=100_000_000,
        discounting=0.97,
        learning_rate=0.0003,
        entropy_cost=0.01,
        normalize_observations=True,
        action_repeat=1,
        progress_fn=lambda n, metrics: give(**metrics),
        num_evals=500,
        reward_scaling=0.1,
        episode_length=1000,
        unroll_length=5,
        num_minibatches=32,
        num_envs=8192,
        batch_size=1024,
    )


def main():
    try:
        run()
    except KeyboardInterrupt:
        pass


if __name__ == "__main__":
    with given() as gv:
        gv["?training/sps"].map(
            lambda sps: {"task": "train", "rate": sps, "units": "steps/s"}
        ).give()
        gv["?eval/episode_reward"].map(lambda reward: -reward.item()).as_("loss").give()
        main()
